{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue dans la documentation du plugin Analyse Survol","text":"<p>Bienvenue dans la documentation officielle de votre projet QGIS. Ici, vous trouverez tout ce qu\u2019il faut savoir pour utiliser et d\u00e9velopper le projet.</p>"},{"location":"#documentation-utilisateur","title":"Documentation Utilisateur","text":"<p>Apprenez \u00e0 utiliser toutes les fonctionnalit\u00e9s du projet, avec des guides pas-\u00e0-pas, des captures d\u2019\u00e9cran et des astuces pratiques.</p> <p>\u27a1 Acc\u00e9der \u00e0 la documentation Utilisateur</p>"},{"location":"#documentation-developpeur","title":"Documentation D\u00e9veloppeur","text":"<p>Tout ce dont un d\u00e9veloppeur a besoin pour contribuer au projet : architecture, bonnes pratiques, et guide pour cr\u00e9er de nouvelles fonctionnalit\u00e9s.</p> <p>\u27a1 Acc\u00e9der \u00e0 la documentation D\u00e9veloppeur</p>"},{"location":"#effectuer-une-analyse-de-survol-complete","title":"Effectuer une analyse de survol compl\u00e8te","text":"<p>Apprenez \u00e0 utiliser toutes les fonctionnalit\u00e9s du projet, avec des guides pas-\u00e0-pas, des captures d\u2019\u00e9cran et des astuces pratiques.</p> <p>\u27a1 Acc\u00e9der au guide pas \u00e0 pas de l'analyse de survol</p> <p>\ud83d\udca1 Astuce : utilisez la navigation en haut \u00e0 gauche pour explorer toutes les sections de la documentation.</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/","title":"Documentation D\u00e9veloppeur - Plugin Analyse Survol","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#architecture-generale","title":"Architecture g\u00e9n\u00e9rale","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#vue-densemble","title":"Vue d'ensemble","text":"<p>Le plugin Analyse Survol suit une architecture modulaire bas\u00e9e sur le pattern MVC (Model-View-Controller) adapt\u00e9 pour QGIS :</p> <pre><code>analyse_survol/\n\u251c\u2500\u2500 __init__.py                 # Point d'entr\u00e9e du plugin\n\u251c\u2500\u2500 metadata.txt               # M\u00e9tadonn\u00e9es du plugin\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 plugin.py             # Contr\u00f4leur principal\n\u2502   \u251c\u2500\u2500 core/                 # Logique m\u00e9tier\n\u2502   \u2502   \u251c\u2500\u2500 calculator.py     # Calculs d'altitude\n\u2502   \u2502   \u2514\u2500\u2500 visualization/    # Visualisation et capture\n\u2502   \u2502       \u251c\u2500\u2500 line_segment_visualizer.py\n\u2502   \u2502       \u2514\u2500\u2500 map_capture.py\n\u2502   \u2514\u2500\u2500 gui/                  # Interface utilisateur\n\u2502       \u251c\u2500\u2500 dialog.py         # Dialogue altitude relative\n\u2502       \u251c\u2500\u2500 line_segment_dialog.py\n\u2502       \u2514\u2500\u2500 altitude_check_dialog.py\n\u2514\u2500\u2500 resources/                # Ressources (ic\u00f4nes, etc.)\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#dependances","title":"D\u00e9pendances","text":"<ul> <li>QGIS Core : API QGIS pour la manipulation des donn\u00e9es g\u00e9ospatiales</li> <li>QGIS GUI : Widgets d'interface utilisateur QGIS</li> <li>PyQt5/6 : Interface graphique</li> <li>NumPy : Calculs num\u00e9riques optimis\u00e9s</li> <li>Processing : Framework de traitement QGIS</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#principes-de-fonctionnement","title":"Principes de fonctionnement","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#1-gestion-des-systemes-de-coordonnees","title":"1. Gestion des syst\u00e8mes de coordonn\u00e9es","text":"<p>Le plugin utilise une approche de transformation syst\u00e9matique : - Entr\u00e9e : Donn\u00e9es dans n'importe quel CRS - Traitement : Transformation vers Lambert 93 (EPSG:2154) - Sortie : CRS configurable par l'utilisateur</p> <p>Justification : Lambert 93 est une projection conforme pour la France, permettant des calculs de distance pr\u00e9cis en coordonn\u00e9es planes.</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#2-traitement-des-geometries-3d","title":"2. Traitement des g\u00e9om\u00e9tries 3D","text":"<p>Le plugin g\u00e8re nativement les g\u00e9om\u00e9tries 3D : - LineStringZ : Lignes avec coordonn\u00e9es Z - MultiLineStringZ : Collections de lignes 3D - Pr\u00e9servation des Z : Maintien des informations d'altitude</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#3-segmentation-adaptative","title":"3. Segmentation adaptative","text":"<p>La visualisation utilise une segmentation bas\u00e9e sur la distance : - Longueur fixe : Segments de longueur m\u00e9trique constante - Interpolation : Cr\u00e9ation de points interm\u00e9diaires si n\u00e9cessaire - Pr\u00e9servation topologique : Maintien de la continuit\u00e9</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#structure-du-code","title":"Structure du code","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#hierarchie-des-classes","title":"Hi\u00e9rarchie des classes","text":"<pre><code># Plugin principal\nAltitudeRelativePlugin\n\u251c\u2500\u2500 AltitudeCalculator          # Logique de calcul\n\u251c\u2500\u2500 LineSegmentVisualizer       # Visualisation color\u00e9e\n\u2514\u2500\u2500 MapCapturer                # G\u00e9n\u00e9ration de captures\n\n# Dialogues\nAltitudeRelativeDialog          # Interface calcul d'altitude\nLineSegmentDialog              # Interface visualisation\nAltitudeCheckDialog           # Interface d\u00e9tection d\u00e9passements\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<pre><code>Donn\u00e9es d'entr\u00e9e (LineStringZ + MNT)\n    \u2193\nValidation et transformation CRS\n    \u2193\nTraitement par module sp\u00e9cialis\u00e9\n    \u2193\nG\u00e9n\u00e9ration de r\u00e9sultats\n    \u2193\nAffichage et export\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#modules-detailles","title":"Modules d\u00e9taill\u00e9s","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#pluginpy-controleur-principal","title":"plugin.py - Contr\u00f4leur principal","text":"<p>Responsabilit\u00e9s : - Initialisation et configuration du plugin - Gestion des actions utilisateur - Orchestration des modules m\u00e9tier - Gestion des erreurs et messages</p> <p>Classes principales : <pre><code>class AltitudeRelativePlugin:\n    def __init__(self, iface)           # Initialisation\n    def initGui(self)                   # Interface graphique\n    def run(self)                       # Calcul d'altitude\n    def run_visualization(self)         # Visualisation\n    def run_altitude_check(self)        # D\u00e9tection d\u00e9passements\n</code></pre></p> <p>M\u00e9thodes cl\u00e9s : - <code>process_altitude_calculation()</code> : Orchestration du calcul d'altitude - <code>process_visualization()</code> : Gestion de la visualisation color\u00e9e - Gestion des groupes cons\u00e9cutifs avec v\u00e9rification topologique</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#corecalculatorpy-moteur-de-calcul","title":"core/calculator.py - Moteur de calcul","text":"<p>Objectif : Calculer les altitudes relatives par rapport au terrain.</p> <p>Algorithme principal : 1. Drapage : Utilisation de l'outil QGIS <code>native:setzfromraster</code> 2. Comparaison : Diff\u00e9rence entre altitude de vol et altitude sol 3. Mise \u00e0 jour : Modification des coordonn\u00e9es Z avec les valeurs relatives</p> <p>Classes et m\u00e9thodes : <pre><code>class AltitudeCalculator:\n    def create_output_layer(source_layer, output_crs=None)\n    def calculate_relative_altitudes(mnt_layer, polyline_layer, ...)\n    def add_altitude_fields(layer)\n\ndef replace_z(geom: QgsGeometry, new_z: np.ndarray) -&gt; QgsGeometry\n</code></pre></p> <p>Gestion des transformations : <pre><code># Transformation automatique si CRS diff\u00e9rent\nif output_crs and source_layer.crs() != output_crs:\n    transform = QgsCoordinateTransform(source_layer.crs(), output_crs, QgsProject.instance())\n    geom.transform(transform)\n</code></pre></p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#corevisualizationline_segment_visualizerpy","title":"core/visualization/line_segment_visualizer.py","text":"<p>Objectif : Cr\u00e9er une visualisation color\u00e9e des segments selon l'altitude.</p> <p>Algorithme de segmentation : 1. Extraction des vertices : R\u00e9cup\u00e9ration des points 3D 2. Segmentation fixe : D\u00e9coupage selon une longueur m\u00e9trique 3. Interpolation : Cr\u00e9ation de points interm\u00e9diaires si n\u00e9cessaire 4. Attribution couleur : Application du d\u00e9grad\u00e9 selon l'altitude moyenne</p> <p>Classes principales : <pre><code>@dataclass\nclass ColorStop:\n    altitude: float\n    color: Tuple[int, int, int]\n\nclass LineSegmentVisualizer:\n    def __init__(self, segment_length=5.0, color_stops=None)\n    def create_segment_layer(source_layer, name=None)\n    def _split_line_3d(geometry)\n    def _interpolate_color(z)\n</code></pre></p> <p>Algorithme de d\u00e9coupage : <pre><code># Segmentation \u00e0 longueur fixe\nwhile dist_acc + d &gt;= self.segment_length:\n    t = (self.segment_length - dist_acc) / d\n    new_pt = QgsPoint(\n        p_prev.x() + t * vec.x(),\n        p_prev.y() + t * vec.y(),\n        p_prev.z() + t * vec.z()\n    )\n    # Cr\u00e9ation du segment\n</code></pre></p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#corevisualizationmap_capturepy","title":"core/visualization/map_capture.py","text":"<p>Objectif : G\u00e9n\u00e9rer des captures de carte avec annotations.</p> <p>Fonctionnalit\u00e9s : - Capture simple de segments - Capture avec marqueurs de d\u00e9but/fin - Annotations automatiques (distance, l\u00e9gende) - Layout optimis\u00e9 pour la lisibilit\u00e9</p> <p>Architecture de capture : <pre><code>class MapCapturer:\n    def capture_segment(segment_geom, buffer_size, filename)\n    def capture_segment_with_markers(segment_geom, start_point, end_point, distance_text, ...)\n    def _add_map_marker(layout, map_item, point, color)\n    def _add_title_text(layout, title_text)\n    def _add_legend(layout)\n</code></pre></p> <p>Gestion du layout : <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  D\u00c9PASSEMENT D'ALTITUDE - Distance  \u2502 \u2190 Titre (15mm)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                     \u2502\n\u2502         \u25cf CARTE \u25cf                   \u2502 \u2190 Carte (140mm)\n\u2502      (avec marqueurs)               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#gui-interfaces-utilisateur","title":"gui/ - Interfaces utilisateur","text":"<p>Dialogues sp\u00e9cialis\u00e9s : - <code>AltitudeRelativeDialog</code> : Configuration du calcul d'altitude - <code>LineSegmentDialog</code> : Param\u00e8tres de visualisation - <code>AltitudeCheckDialog</code> : D\u00e9tection des d\u00e9passements</p> <p>Widgets QGIS utilis\u00e9s : - <code>QgsMapLayerComboBox</code> : S\u00e9lection de couches - <code>QgsProjectionSelectionWidget</code> : Choix du CRS - <code>QgsColorRampButton</code> : Configuration des d\u00e9grad\u00e9s</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#algorithmes-implementes","title":"Algorithmes impl\u00e9ment\u00e9s","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#1-detection-de-segments-consecutifs","title":"1. D\u00e9tection de segments cons\u00e9cutifs","text":"<p>Probl\u00e8me : Identifier les segments qui se touchent r\u00e9ellement.</p> <p>Solution : <pre><code># Calcul de distance entre fin du segment pr\u00e9c\u00e9dent et d\u00e9but du nouveau\ndistance_to_previous_end = ((segment_start.x() - current_end_point.x()) ** 2 + \n                          (segment_start.y() - current_end_point.y()) ** 2) ** 0.5\nis_consecutive = distance_to_previous_end &lt;= tolerance  # 0.001m\n</code></pre></p> <p>Avantages : - Robuste aux erreurs d'arrondi - \u00c9vite les faux regroupements - Pr\u00e9serve la topologie</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#2-interpolation-de-couleurs","title":"2. Interpolation de couleurs","text":"<p>Algorithme : Interpolation lin\u00e9aire entre points de contr\u00f4le.</p> <pre><code>def _interpolate_color(self, z: float) -&gt; str:\n    for i in range(len(self.color_stops) - 1):\n        stop1, stop2 = self.color_stops[i], self.color_stops[i + 1]\n        if stop1.altitude &lt;= z &lt;= stop2.altitude:\n            t = (z - stop1.altitude) / (stop2.altitude - stop1.altitude)\n            r = int(stop1.color[0] + t * (stop2.color[0] - stop1.color[0]))\n            # Idem pour g et b\n            return f\"#{r:02x}{g:02x}{b:02x}\"\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#3-transformation-de-coordonnees","title":"3. Transformation de coordonn\u00e9es","text":"<p>Strat\u00e9gie : Transformation syst\u00e9matique vers Lambert 93 pour les calculs.</p> <pre><code># D\u00e9tection du besoin de transformation\nneeds_transform = output_crs and source_layer.crs() != output_crs\nif needs_transform:\n    transform = QgsCoordinateTransform(source_layer.crs(), output_crs, QgsProject.instance())\n    geom.transform(transform)\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#4-positionnement-des-marqueurs","title":"4. Positionnement des marqueurs","text":"<p>Probl\u00e8me : Positionner pr\u00e9cis\u00e9ment des marqueurs sur une carte en layout.</p> <p>Solution : Conversion manuelle des coordonn\u00e9es g\u00e9ographiques vers coordonn\u00e9es de layout.</p> <pre><code># Position relative dans l'emprise (0-1)\nrel_x = (point.x() - extent.xMinimum()) / extent.width()\nrel_y = (extent.yMaximum() - point.y()) / extent.height()  # Y invers\u00e9\n\n# Conversion en coordonn\u00e9es layout\nlayout_x = map_rect.x() + rel_x * map_rect.width()\nlayout_y = map_rect.y() + rel_y * map_rect.height()\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#gestion-des-coordonnees","title":"Gestion des coordonn\u00e9es","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#systemes-supportes","title":"Syst\u00e8mes support\u00e9s","text":"<ul> <li>Entr\u00e9e : Tout CRS support\u00e9 par QGIS</li> <li>Processing : Lambert 93 (EPSG:2154) pour la France</li> <li>Sortie : CRS configurable</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#transformations-automatiques","title":"Transformations automatiques","text":"<pre><code># Dans create_output_layer\nif output_crs:\n    crs = output_crs.authid()\nelse:\n    crs = source_layer.crs().authid()\n\n# Transformation des features\ntransform = QgsCoordinateTransform(source_layer.crs(), output_crs, QgsProject.instance())\ngeom.transform(transform)\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#precision-et-performances","title":"Pr\u00e9cision et performances","text":"<ul> <li>Pr\u00e9cision : Utilisation de coordonn\u00e9es planes pour \u00e9viter les d\u00e9formations</li> <li>Performance : Transformation une seule fois par feature</li> <li>Robustesse : Gestion des erreurs de transformation</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#interface-utilisateur","title":"Interface utilisateur","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#architecture-des-dialogues","title":"Architecture des dialogues","text":"<p>Tous les dialogues h\u00e9ritent des patterns QGIS : - <code>QDialog</code> comme classe de base - Utilisation de layouts pour l'organisation - Widgets QGIS sp\u00e9cialis\u00e9s pour la coh\u00e9rence</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#validation-des-entrees","title":"Validation des entr\u00e9es","text":"<pre><code># V\u00e9rification des couches disponibles\nif dialog.layer_combo.currentLayer() is None:\n    self.iface.messageBar().pushMessage(\"Erreur\", \"Aucune couche disponible\", level=Qgis.Critical)\n    return\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#gestion-des-erreurs","title":"Gestion des erreurs","text":"<ul> <li>Messages utilisateur via <code>messageBar()</code></li> <li>Logs d\u00e9taill\u00e9s via <code>QgsMessageLog</code></li> <li>Try/catch syst\u00e9matique avec rollback</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#extensibilite","title":"Extensibilit\u00e9","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#points-dextension","title":"Points d'extension","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#1-nouveaux-algorithmes-de-visualisation","title":"1. Nouveaux algorithmes de visualisation","text":"<pre><code># Dans LineSegmentVisualizer\ndef _interpolate_color_custom(self, z: float, algorithm: str) -&gt; str:\n    if algorithm == \"logarithmic\":\n        # Impl\u00e9mentation logarithmique\n    elif algorithm == \"exponential\":\n        # Impl\u00e9mentation exponentielle\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#2-formats-dexport-supplementaires","title":"2. Formats d'export suppl\u00e9mentaires","text":"<pre><code># Dans MapCapturer\ndef export_to_pdf(self, layout, filename):\n    # Export PDF avec mise en page complexe\n\ndef export_to_svg(self, layout, filename):\n    # Export vectoriel pour \u00e9dition\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#3-calculs-daltitude-alternatifs","title":"3. Calculs d'altitude alternatifs","text":"<pre><code># Dans AltitudeCalculator\ndef calculate_with_interpolation(self, method=\"bilinear\"):\n    # Interpolation avanc\u00e9e du MNT\n\ndef calculate_with_multiple_sources(self, mnt_layers):\n    # Fusion de plusieurs sources d'altitude\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#architecture-modulaire","title":"Architecture modulaire","text":"<p>Chaque module est ind\u00e9pendant et peut \u00eatre \u00e9tendu : - Interfaces claires : APIs bien d\u00e9finies - Faible couplage : D\u00e9pendances minimales - S\u00e9paration des responsabilit\u00e9s : Un module = une fonction</p>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#tests-et-debugging","title":"Tests et debugging","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#strategies-de-test","title":"Strat\u00e9gies de test","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#1-tests-unitaires-recommandes","title":"1. Tests unitaires (recommand\u00e9s)","text":"<pre><code>import unittest\nfrom qgis.core import QgsGeometry, QgsPoint\n\nclass TestLineSegmentVisualizer(unittest.TestCase):\n    def test_split_line_3d(self):\n        # Test de segmentation\n        line = QgsGeometry.fromPolyline([\n            QgsPoint(0, 0, 100),\n            QgsPoint(10, 0, 200)\n        ])\n        visualizer = LineSegmentVisualizer(segment_length=5.0)\n        segments = visualizer._split_line_3d(line)\n        self.assertEqual(len(segments), 2)  # 2 segments de 5m\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#2-tests-dintegration","title":"2. Tests d'int\u00e9gration","text":"<ul> <li>Test avec vraies donn\u00e9es QGIS</li> <li>V\u00e9rification des r\u00e9sultats visuels</li> <li>Performance sur gros datasets</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#debugging","title":"Debugging","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#logging-avance","title":"Logging avanc\u00e9","text":"<pre><code># Dans chaque module\nQgsMessageLog.logMessage(f\"Processing {len(features)} features\", \n                        \"AnalyseSurvol\", Qgis.Info)\n\n# Debug d\u00e9taill\u00e9\nif DEBUG:\n    QgsMessageLog.logMessage(f\"Segment {i}: start={start}, end={end}, z={z_avg}\", \n                            \"AnalyseSurvol\", Qgis.Info)\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#gestion-des-erreurs_1","title":"Gestion des erreurs","text":"<pre><code>try:\n    # Op\u00e9ration risqu\u00e9e\n    result = process_geometry(geom)\nexcept Exception as e:\n    QgsMessageLog.logMessage(f\"Erreur g\u00e9om\u00e9trie {geom.wkbType()}: {str(e)}\", \n                            \"AnalyseSurvol\", Qgis.Critical)\n    return None\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#optimisations","title":"Optimisations","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#performance","title":"Performance","text":"<ul> <li>Vectorisation NumPy : Calculs sur arrays pour la vitesse</li> <li>Cache des transformations : R\u00e9utilisation des objets QgsCoordinateTransform</li> <li>Traitement par batch : \u00c9viter les boucles sur les features</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#memoire","title":"M\u00e9moire","text":"<ul> <li>Streaming : Traitement feature par feature pour gros datasets</li> <li>Cleanup : Suppression explicite des objets temporaires</li> <li>Lazy loading : Chargement \u00e0 la demande des donn\u00e9es</li> </ul>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#api-de-reference","title":"API de r\u00e9f\u00e9rence","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#classes-principales","title":"Classes principales","text":""},{"location":"DOCUMENTATION_DEVELOPPEUR/#altituderelativeplugin","title":"AltitudeRelativePlugin","text":"<pre><code>class AltitudeRelativePlugin:\n    \"\"\"Classe principale du plugin\"\"\"\n\n    def __init__(self, iface: QgisInterface)\n    def initGui(self) -&gt; None\n    def unload(self) -&gt; None\n    def run(self) -&gt; None\n    def run_visualization(self) -&gt; None\n    def run_altitude_check(self) -&gt; None\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#altitudecalculator","title":"AltitudeCalculator","text":"<pre><code>class AltitudeCalculator:\n    \"\"\"Calculateur d'altitude relative\"\"\"\n\n    def create_output_layer(self, source_layer: QgsVectorLayer, \n                          output_crs: QgsCoordinateReferenceSystem = None) -&gt; QgsVectorLayer\n\n    def calculate_relative_altitudes(self, mnt_layer: QgsRasterLayer, \n                                   polyline_layer: QgsVectorLayer,\n                                   altitude_field: str,\n                                   use_z_coordinate: bool,\n                                   progress_callback: callable = None) -&gt; bool\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#linesegmentvisualizer","title":"LineSegmentVisualizer","text":"<pre><code>class LineSegmentVisualizer:\n    \"\"\"Visualiseur de segments color\u00e9s\"\"\"\n\n    def __init__(self, segment_length: float = 5.0, \n                 color_stops: List[ColorStop] = None)\n\n    def create_segment_layer(self, source_layer: QgsVectorLayer, \n                           name: str = None) -&gt; QgsVectorLayer\n</code></pre>"},{"location":"DOCUMENTATION_DEVELOPPEUR/#mapcapturer","title":"MapCapturer","text":"<pre><code>class MapCapturer:\n    \"\"\"G\u00e9n\u00e9rateur de captures de carte\"\"\"\n\n    def __init__(self, iface: QgisInterface, output_folder: str)\n\n    def capture_segment_with_markers(self, segment_geom: QgsGeometry,\n                                   start_point: QgsPointXY,\n                                   end_point: QgsPointXY,\n                                   distance_text: str,\n                                   buffer_size: int = 200,\n                                   filename: str = None) -&gt; str\n</code></pre> <p>Documentation d\u00e9veloppeur g\u00e9n\u00e9r\u00e9e avec Claude Sonnet 4. Plugin Analyse Survol - Documentation d\u00e9veloppeur v1.0 Mise \u00e0 jour le 24 septembre 2025</p>"},{"location":"DOCUMENTATION_UTILISATEUR/","title":"Documentation Utilisateur - Plugin Analyse Survol","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#introduction","title":"Introduction","text":"<p>Le plugin Analyse Survol est un outil QGIS con\u00e7u pour analyser les trajectoires de vol et calculer les altitudes relatives par rapport au sol. Il est particuli\u00e8rement utile pour : - L'analyse de conformit\u00e9 des vols par rapport aux altitudes minimales r\u00e9glementaires - La visualisation des segments de vol avec codes couleur selon l'altitude - La d\u00e9tection automatique des d\u00e9passements d'altitude minimale - La g\u00e9n\u00e9ration de rapports visuels avec captures de carte</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#caracteristiques-principales","title":"Caract\u00e9ristiques principales","text":"<ul> <li>Calcul d'altitude relative : Calcule l'altitude de vol par rapport au terrain</li> <li>Visualisation color\u00e9e : Affichage des segments avec d\u00e9grad\u00e9 de couleur selon l'altitude</li> <li>D\u00e9tection automatique : Identification des zones de d\u00e9passement d'altitude minimale</li> <li>G\u00e9n\u00e9ration de rapports : Captures automatiques avec marqueurs et distances</li> <li>Support multi-projections : Transformation automatique entre syst\u00e8mes de coordonn\u00e9es</li> </ul>"},{"location":"DOCUMENTATION_UTILISATEUR/#installation","title":"Installation","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>QGIS 3.40 ou version ult\u00e9rieure</li> <li>Python 3.12+</li> <li>Modules Python : numpy (g\u00e9n\u00e9ralement inclus avec QGIS)</li> </ul>"},{"location":"DOCUMENTATION_UTILISATEUR/#installation-depuis-le-depot-de-plugins-qgis-du-parc-national-du-mercantour","title":"Installation depuis le depot de plugins QGIS du Parc national du Mercantour","text":"<ul> <li>Si le d\u00e9p\u00f4t QGIS du Parc national du Mercantour n'est pas configur\u00e9 dans QGIS suivre la proc\u00e9dure d'installation</li> <li>Dans QGIS allez dans Extensions \u2192 Installer/G\u00e9rer les extensions, dans l'onglet Toutes, recherchez l'extension <code>Analyse Survol</code> puis cliquez sur Installer</li> </ul>"},{"location":"DOCUMENTATION_UTILISATEUR/#verification-de-linstallation","title":"V\u00e9rification de l'installation","text":"<p>Apr\u00e8s activation, vous devriez voir : - Une nouvelle barre d'outils \"Analyse Survol\" avec 3 boutons d'actions - Un menu \"Analyse Survol\" dans le menu Vecteur</p> <p>Remarque : Effectuez les mises \u00e0 jour du plugin r\u00e9guli\u00e8rement.</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#prise-en-main","title":"Prise en main","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#interface-utilisateur","title":"Interface utilisateur","text":"<p>Le plugin ajoute trois outils principaux accessibles via : - Barre d'outils : Trois boutons avec ic\u00f4nes - Menu Vecteur : Sous-menu \"Analyse Survol\"</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#donnees-requises","title":"Donn\u00e9es requises","text":"<p>Pour utiliser le plugin, vous devez disposer de : 1. Couche MNT (Mod\u00e8le Num\u00e9rique de Terrain) : Raster repr\u00e9sentant l'altitude du sol 2. Couche de trajectoire : Ligne 3D (LineStringZ) avec coordonn\u00e9es Z repr\u00e9sentant l'altitude de vol</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#format-des-donnees","title":"Format des donn\u00e9es","text":"<ul> <li>Trajectoires : Format LineStringZ ou MultiLineStringZ avec coordonn\u00e9es Z</li> <li>MNT : Format raster (GeoTIFF, ASCII Grid, etc.)</li> <li>Syst\u00e8mes de coordonn\u00e9es : Tous syst\u00e8mes support\u00e9s par QGIS (transformation automatique)</li> </ul>"},{"location":"DOCUMENTATION_UTILISATEUR/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#1-calcul-daltitude-relative","title":"1. Calcul d'altitude relative","text":"<p>Objectif : Calculer l'altitude de vol par rapport au terrain pour chaque point de la trajectoire.</p> <p>Fonctionnement : - \u00c9chantillonne l'altitude du sol (MNT) le long de la trajectoire - Calcule la diff\u00e9rence entre l'altitude de vol et l'altitude du sol - G\u00e9n\u00e8re une nouvelle couche avec les altitudes relatives</p> <p>Options disponibles : - Choix de la projection de sortie - Utilisation des coordonn\u00e9es Z ou d'un champ d'attribut - Cr\u00e9ation d'une nouvelle couche ou modification de l'existante</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#2-visualisation-des-segments-colores","title":"2. Visualisation des segments color\u00e9s","text":"<p>Objectif : Cr\u00e9er une visualisation color\u00e9e des segments de vol selon leur altitude.</p> <p>Fonctionnement : - D\u00e9coupe la trajectoire en segments de longueur fixe - Calcule l'altitude moyenne de chaque segment - Applique un code couleur bas\u00e9 sur un d\u00e9grad\u00e9 personnalisable</p> <p>Options disponibles : - Longueur des segments (0.1 \u00e0 100 m\u00e8tres) - Configuration du d\u00e9grad\u00e9 de couleurs - \u00c9paisseur des traits (1.25mm par d\u00e9faut)</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#3-detection-des-depassements-daltitude-minimale","title":"3. D\u00e9tection des d\u00e9passements d'altitude minimale","text":"<p>Objectif : Identifier automatiquement les zones o\u00f9 l'altitude de vol est inf\u00e9rieure \u00e0 un seuil.</p> <p>Fonctionnement : - Analyse tous les segments de la trajectoire - Identifie les groupes de segments cons\u00e9cutifs sous l'altitude minimale - G\u00e9n\u00e8re des captures de carte avec marqueurs de d\u00e9but/fin - Calcule les distances de d\u00e9passement</p> <p>Options disponibles : - Altitude minimale configurable - Taille du buffer pour les captures - G\u00e9n\u00e9ration automatique de rapports visuels</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#guide-dutilisation-detaille","title":"Guide d'utilisation d\u00e9taill\u00e9","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#calcul-daltitude-relative","title":"Calcul d'altitude relative","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#etape-1-preparation-des-donnees","title":"\u00c9tape 1 : Pr\u00e9paration des donn\u00e9es","text":"<ol> <li>Chargez votre couche MNT dans QGIS</li> <li>Chargez votre couche de trajectoire (LineStringZ)</li> <li>V\u00e9rifiez que les deux couches ont des syst\u00e8mes de coordonn\u00e9es coh\u00e9rents</li> </ol>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-2-lancement-du-calcul","title":"\u00c9tape 2 : Lancement du calcul","text":"<ol> <li>Cliquez sur l'ic\u00f4ne \"Calculer altitude relative\" </li> <li>Dans la bo\u00eete de dialogue :</li> <li>MNT : S\u00e9lectionnez votre couche raster</li> <li>Trajectoire : S\u00e9lectionnez votre couche de ligne 3D</li> <li>Champ altitude : Laissez sur \"Coordonn\u00e9e Z\" ou choisissez un champ</li> <li>Projection de sortie : Choisissez le syst\u00e8me de coordonn\u00e9es d\u00e9sir\u00e9 (Lambert 93 par d\u00e9faut)</li> <li>Nouvelle couche : Cochez pour cr\u00e9er une nouvelle couche</li> </ol>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-3-resultats","title":"\u00c9tape 3 : R\u00e9sultats","text":"<p>La couche r\u00e9sultante contient : - G\u00e9om\u00e9trie modifi\u00e9e : Coordonn\u00e9es Z mises \u00e0 jour avec l'altitude relative</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#visualisation-des-segments-colores","title":"Visualisation des segments color\u00e9s","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#etape-1-configuration","title":"\u00c9tape 1 : Configuration","text":"<ol> <li>Cliquez sur \"Visualiser segments color\u00e9s\" </li> <li>Configurez les param\u00e8tres :</li> <li>Couche source : S\u00e9lectionnez votre trajectoire (celle calcul\u00e9e pr\u00e9c\u00e9demment avec l'altitude relative)</li> <li>Longueur segments : 5 m\u00e8tres recommand\u00e9</li> <li>D\u00e9grad\u00e9 de couleurs : Personnalisez selon vos besoins</li> <li>Nouvelle couche : Recommand\u00e9 pour pr\u00e9server l'original</li> </ol>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-2-personnalisation-du-degrade","title":"\u00c9tape 2 : Personnalisation du d\u00e9grad\u00e9","text":"<p>Le d\u00e9grad\u00e9 par d\u00e9faut : - Rouge (0m) : Altitude tr\u00e8s faible - Orange (500m) : Altitude faible - Jaune (800m) : Altitude moyenne - Vert (1000m) : Altitude \u00e9lev\u00e9e</p> <p>Le d\u00e9grad\u00e9 prend en compte une altitude de 0m \u00e0 1000m, ainsi si on place une couleur \u00e0 50% cela correspondra \u00e0 une altitude de 500m.</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-3-resultats_1","title":"\u00c9tape 3 : R\u00e9sultats","text":"<p>Une nouvelle couche avec : - Segments color\u00e9s selon l'altitude - Traits \u00e9paissis pour meilleure visibilit\u00e9 - Attributs : altitude moyenne du segment, longueur du segment, code couleur</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#detection-des-depassements","title":"D\u00e9tection des d\u00e9passements","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#etape-1-configuration-de-la-detection","title":"\u00c9tape 1 : Configuration de la d\u00e9tection","text":"<ol> <li>Cliquez sur \"D\u00e9tecter segments sous altitude min.\" </li> <li>Param\u00e8tres :</li> <li>Couche : Trajectoire \u00e0 analyser (Attention \u00e0 bien analyser la trajectoire utilis\u00e9e pour la visualisation)</li> <li>Altitude minimale : Seuil en m\u00e8tres (ex: 1000m)</li> <li>Buffer capture : Zone autour du segment (1000m recommand\u00e9)</li> <li>Dossier de sortie : Dossier de stockage des captures</li> </ol>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-2-analyse-automatique","title":"\u00c9tape 2 : Analyse automatique","text":"<p>Le plugin : - Identifie tous les segments sous le seuil - Groupe les segments cons\u00e9cutifs (qui se touchent) - Calcule la distance totale de chaque groupe - G\u00e9n\u00e8re une capture pour chaque groupe</p>"},{"location":"DOCUMENTATION_UTILISATEUR/#etape-3-resultats-et-rapports","title":"\u00c9tape 3 : R\u00e9sultats et rapports","text":"<p>Captures g\u00e9n\u00e9r\u00e9es : - Nom : <code>groupe_X_altYYYm_ZZZm.png</code> - Titre avec longueur du segment et altitude minimale sur le segment - Marqueurs : D\u00e9but et fin de zone - Capture de la carte avec la vue actuellement param\u00e9tr\u00e9e</p> <p>Rapport textuel : <pre><code>3 segments r\u00e9partis en 2 groupe(s) sous l'altitude minimale de 150m.\nDistance totale: 450m\n\n- Groupe de 2 segments \u00e0 120m (300m)\n- Groupe de 1 segments \u00e0 140m (150m)\n\nCaptures avec marqueurs sauvegard\u00e9es dans /chemin/captures_altitude\n</code></pre></p>"},{"location":"DOCUMENTATION_UTILISATEUR/#cas-dusage","title":"Cas d'usage","text":""},{"location":"DOCUMENTATION_UTILISATEUR/#analyse-de-conformite-de-vol","title":"Analyse de conformit\u00e9 de vol","text":"<p>Des donn\u00e9es d'exemple sont disponibles via ce lien. Il faut t\u00e9l\u00e9charger les donn\u00e9es, d\u00e9zipper et ouvrir le projet QGIS contenu dans le dossier.</p> <p>Contexte : V\u00e9rifier qu'un vol respecte l'altitude minimale de 1000m au-dessus du sol.</p> <p>Proc\u00e9dure :</p> <ol> <li> <p>Calculer l'altitude relative avec le MNT local</p> <ul> <li> <p>Charger le MNT dans QGIS</p> </li> <li> <p>Charger la trajectoire du vol dans QGIS</p> </li> <li> <p>Cliquer sur l'ic\u00f4ne \"Calculer altitude relative\" </p> </li> <li> <p>S\u00e9lectionner la couche MNT et la trajectoire dans la boite de dialogue </p> </li> <li> <p>Cliquer sur OK</p> </li> <li> <p>Une nouvelle couche doit apparaitre avec comme coordonn\u00e9e z l'altitude relative par rapport au sol</p> </li> <li> <p>Optionnel : Filtrer cette couche sur l'emprise totale du Parc National (peut acc\u00e9l\u00e9rer les futurs calculs)</p> </li> </ul> </li> <li> <p>Visualiser l'altitude du survol</p> <ul> <li>Cliquer sur l'ic\u00f4ne \"Visualiser segments color\u00e9s\" </li> <li>S\u00e9lectionner la couche avec les altitudes relatives </li> <li>Optionnel : Modifier le d\u00e9grad\u00e9 pour une visualisation diff\u00e9rente et adapter la longueur des sous-segments</li> <li>Cliquer sur OK</li> <li>Une nouvelle couche apparait avec la colormap d\u00e9finie </li> </ul> </li> <li> <p>Extraire les zones de survol \u00e0 basse altitude</p> <ul> <li>S\u00e9lectionner les couches \u00e0 afficher dans les rapports (Carte IGN Topo, couche visualisation de l'altitude relative...)</li> <li>Cliquer sur l'ic\u00f4ne \"D\u00e9tecter segments sous altitude min.\" </li> <li>S\u00e9lectionner la couche \u00e0 analyser qui est celle utilis\u00e9e pour visualiser. </li> <li>D\u00e9finir l'altitude minimale souhait\u00e9e, \u00e9ventuellement une zone de capture autour du segment (uniquement pour modifier l'affichage) et modifier le dossier de sortie des rapports pour chaque segment.</li> <li>Cliquer sur OK</li> <li>Attendre la fin du traitement et r\u00e9cup\u00e9rer les captures dans le dossier de sortie </li> </ul> </li> </ol> <p>Plugin Analyse Survol - Version 1.1 Documentation utilisateur mise \u00e0 jour le 30 septembre 2025</p>"}]}